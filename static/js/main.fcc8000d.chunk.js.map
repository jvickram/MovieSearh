{"version":3,"sources":["Favourite.js","Home.js","Header.js","Details.js","App.js","serviceWorker.js","index.js"],"names":["removeFromFav","title","old","Data","favourite","findIndex","e","Title","splice","f","localStorage","setItem","JSON","stringify","window","location","reload","Favourite","length","data","getItem","extractedData","parse","undefined","forEach","item","push","react_default","a","createElement","Container","Col","sm","md","size","offset","map","style","padding","key","Row","Card","CardBody","width","src","Poster","alt","CardTitle","tag","CardSubtitle","className","Year","onClick","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchText","selectedItem","toggleStatus","response","onChange","bind","assertThisInitialized","fetchResult","addToFav","setState","defineProperty","target","name","value","newFav","_this2","_this$state","fetch","then","res","json","console","log","_this3","textAlign","type","verticalAlign","height","placeholder","Styles","boxSize","marginLeft","disabled","display","margin","Response","Error","justifyContent","react_router_dom","to","pathname","searchDetail","Component","Header","Navbar","light","expand","backgroundColor","Nav","navbar","NavItem","Details","Type","CardText","Actors","Awards","BoxOffice","Country","DVD","Director","Genre","Language","Metascore","Production","Plot","Rated","Runtime","Released","imdbID","imdbRating","imdbVotes","App","src_Header","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fcc8000d.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    Container, Row, Col, Card, CardBody,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport Data from './data.json'\r\n\r\nconst removeFromFav = (title) =>{\r\n    let old = Data.favourite\r\n    while ( old.findIndex(e => e.Title === title ) >= 0 )\r\n    old.splice( old.findIndex(f => f.Title === title),1);\r\n    Data.favourite = old\r\n    localStorage.setItem('Favourite',JSON.stringify(Data.favourite))\r\n    window.location.reload(false);\r\n}\r\n\r\nexport default function Favourite() {\r\n    if(Data.favourite.length===0){\r\n        let data = localStorage.getItem('Favourite')\r\n        let extractedData = JSON.parse(data)\r\n        if(extractedData!==\"\" && extractedData!==undefined && extractedData!==null){\r\n            extractedData.forEach(item => {\r\n                            Data.favourite.push(item)\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}><h1>My Favourites</h1></Col>\r\n        \r\n        {Data.favourite!==null || Data.favourite!==undefined  || Data.favourite!==''?\r\n         Data.favourite.map(item=> {\r\n             return (\r\n\r\n        <Container style={{padding:\"10px\"}} key={item.Title}>\r\n        <Row>\r\n            {item.Title===\"\"? \"\" :\r\n             <Col sm=\"12\" md={{ size: 8, offset: 1 }}>\r\n                <Card key={item.Title}>\r\n                    <CardBody>\r\n                        <img width=\"100%\" src={item.Poster} alt=\"Poster\" />\r\n                        <CardTitle tag=\"h5\">Title: {item.Title}</CardTitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Release Date:{item.Year}</CardSubtitle>\r\n                    </CardBody>\r\n                    <CardBody>\r\n                        <button  className=\"btn btn-primary\" onClick = {()=>removeFromFav(item.Title)}>Remove favourite</button>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n            }\r\n        </Row>\r\n    </Container>\r\n         )\r\n        })\r\n       \r\n    : <Container>\r\n        <Row>\r\n            <Col>\r\n                <h3>No Favourites</h3>\r\n            </Col>\r\n        </Row>\r\n    </Container>}\r\n    </Container>\r\n    )\r\n}\r\n\r\nconst Styles = {\r\n    boxSize: {\r\n        height: \"40px\"\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {\r\n    Container, Row, Col, Card, CardBody,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport Data from './data.json'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            favourite: [],\r\n            searchText: '',\r\n            selectedItem: '',\r\n            toggleStatus: false,\r\n            response: '',\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.fetchResult = this.fetchResult.bind(this)\r\n        this.addToFav = this.addToFav.bind(this)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    addToFav(){\r\n        let newFav = this.state.response\r\n        let old = Data\r\n        Data.favourite.push(newFav)\r\n        localStorage.setItem('Favourite',JSON.stringify(Data.favourite))\r\n    }\r\n\r\n    fetchResult() {\r\n        // http://www.omdbapi.com/?type=movie&t=smallville&apikey=d58686a0\r\n        const { selectedItem, searchText } = this.state\r\n        fetch(\"http://www.omdbapi.com/?type=\" + selectedItem + \"&t=\" + searchText + \"&apikey=d58686a0\")\r\n            .then(res => res.json())\r\n            .then(response => this.setState({response:response}))\r\n    }\r\n\r\n    componentDidMount(){\r\n        let data = localStorage.getItem('Favourite') || []\r\n        if (data.length>0){\r\n            var extractedData = JSON.parse(data)\r\n        }\r\n        console.log('extractedData',extractedData)\r\n        Data.favourite = extractedData!==undefined?extractedData: []\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{padding:\"10px\"}}>\r\n                <Row style={{ textAlign: 'center' }}>\r\n                    <Col sm={{ size: 12 }}>\r\n                        <input type=\"text\" style={{width:\"40%\", verticalAlign:'middle', height:\"40px\"} }\r\n                            name=\"searchText\"\r\n                            placeholder=\"Type movie, series, episodes here\"\r\n                            value={this.state.searchText}\r\n                            onChange={(e) => this.onChange(e)}\r\n                        />\r\n                        <select style={Styles.boxSize}\r\n                            className=\"btn btn-primary\"\r\n                            name=\"selectedItem\"\r\n                            value={this.state.selectedItem}\r\n                            onChange={(e) => this.onChange(e)}\r\n                        >\r\n                            <option value=\"dropdown\">Dropdown</option>\r\n                            <option value='all'>All</option>\r\n                            <option value='movie'>Movies</option>\r\n                            <option value='series'>Series</option>\r\n                            <option value='episode'>Episode</option>\r\n                        </select>\r\n                        <button style={{height:\"40px\", marginLeft:\"10px\"}}\r\n                            className=\"btn btn-primary\"\r\n                            type=\"submit\"\r\n                            onClick={this.fetchResult}\r\n                            disabled={(this.state.selectedItem===\"dropdown\" && this.state.selectedItem===\"\") || this.state.searchText===\"\"}\r\n                        >Search</button>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                <Row style={{display: this.state.response!==undefined && this.state.response!== ''? 'block':'none', margin:\"10px\"}}>\r\n                    {this.state.response.Response===\"False\"\r\n                    ?<Col>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <CardTitle tag=\"h5\">{this.state.response.Error}</CardTitle>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    :<Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <img width=\"100%\" src={this.state.response.Poster} alt=\"Poster\" height=\"200px\"/>\r\n                                <CardTitle tag=\"h5\">Title: {this.state.response.Title}</CardTitle>\r\n                                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Release Date:{this.state.response.Year}</CardSubtitle>\r\n                            </CardBody>\r\n                            <CardBody style={{ display: \"flex\", justifyContent: \"space-between\"}}>\r\n                                <button  className=\"btn btn-primary\"\r\n                                    onClick={this.addToFav}\r\n                                >Add to favourite</button>\r\n                                <Link to={{\r\n                                    pathname: \"/details\",\r\n                                    searchDetail: this.state.response\r\n                                }}><button className=\"btn btn-primary\">Details</button></Link>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst Styles = {\r\n    boxSize: {\r\n        height: \"40px\"\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavItem,\r\n} from 'reactstrap';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <Navbar light expand=\"md\" style={{backgroundColor:\"rgb(0, 84, 159)  \"}} className=\"navStyle\">\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <Link to=\"/\">Home</Link>\r\n            </NavItem>\r\n            <NavItem>\r\n              <Link to=\"/favourite\">Favourite</Link>\r\n            </NavItem>\r\n          </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport {\r\n    Container, Row, Col, CardText, CardBody,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\n\r\nfunction Details(props) {\r\n    console.log(props)\r\n    return (\r\n        <Container style={{padding: \"10px\"}}>\r\n            <Row>\r\n                <Col sm={{ size:  4 }}>\r\n                    <img width=\"100%\" src={ props.location.searchDetail.Poster} alt=\"Poster\" />\r\n                </Col>\r\n                <Col sm={{ size:  8 }}>\r\n                    <CardBody>\r\n                        <CardTitle tag=\"h5\">Title:  { props.location.searchDetail.Title}</CardTitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Type:  { props.location.searchDetail.Type}</CardSubtitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Release Date:  { props.location.searchDetail.Year}</CardSubtitle>\r\n                        <CardText>Actors:  { props.location.searchDetail.Actors}</CardText>\r\n                        <CardText>Awards:  { props.location.searchDetail.Awards}</CardText>\r\n                        <CardText>BoxOffice: { props.location.searchDetail.BoxOffice}</CardText>\r\n                        <CardText>Country: { props.location.searchDetail.Country}</CardText>\r\n                        <CardText>DVD: { props.location.searchDetail.DVD}</CardText>\r\n                        <CardText>Director: { props.location.searchDetail.Director}</CardText>\r\n                        <CardText>Genre: { props.location.searchDetail.Genre}</CardText>\r\n                        <CardText>Language: { props.location.searchDetail.Language}</CardText>\r\n                        <CardText>Metascore: { props.location.searchDetail.Metascore}</CardText>\r\n                        <CardText>Production: { props.location.searchDetail.Production}</CardText>\r\n                        <CardText>Plot: { props.location.searchDetail.Plot}</CardText>\r\n                        <CardText>Rated: { props.location.searchDetail.Rated}</CardText>\r\n                        <CardText>Runtime: { props.location.searchDetail.Runtime}</CardText>\r\n                        <CardText>Released: { props.location.searchDetail.Released}</CardText>\r\n                        <CardText>ImdbID: { props.location.searchDetail.imdbID}</CardText>\r\n                        <CardText>ImdbRating: { props.location.searchDetail.imdbRating}</CardText>\r\n                        <CardText>ImdbVotes: { props.location.searchDetail.imdbVotes}</CardText>\r\n                    </CardBody>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Details","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Favourite from \"./Favourite\";\r\nimport Home from \"./Home\";\r\nimport Header from \"./Header\";\r\nimport Details from \"./Details\";\r\nimport { BrowserRouter,Route, Switch } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path = '/' component = {Home} />\r\n          <Route path = \"/favourite\" component = {Favourite} />\r\n          <Route path = \"/details\" component = {Details} />\r\n      </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}